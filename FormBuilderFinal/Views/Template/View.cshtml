@using System.Security.Claims
@using FormBuilder.Models
@model FormBuilder.Models.Template

@{
    ViewData["Title"] = Model.Title;
    var isAuthorized = (bool)ViewBag.IsAuthorized;
    var currentUserId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}

<div class="container mt-4">
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2>@Model.Title</h2>
            @if (isAuthorized)
            {
                    <div class="btn-group">
                        <a asp-action="Edit" asp-route-id="@Model.Id" 
                           class="btn btn-sm btn-outline-primary">Edit</a>
                        <form asp-action="Delete" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@Model.Id" />
                        @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm btn-outline-danger" 
                                    onclick="return confirm('Are you sure you want to delete this form?')">
                                Delete
                            </button>
                        </form>
                    </div>
            }
        </div>
        <div class="card-body">
            <div class="mb-3">
                <h5>Description</h5>
                <p>@Model.Description</p>
            </div>

            <div class="mb-3">
                <h5>Details</h5>
                <ul class="list-unstyled">
                    <li><strong>Topic:</strong> @Model.Topic</li>
                    <li><strong>Created by:</strong> @Model.User.Email</li>
                    <li><strong>Created:</strong> @Model.CreatedDate.ToString("g")</li>
                    <li><strong>Last updated:</strong> @Model.UpdatedDate.ToString("g")</li>
                    <li><strong>Access:</strong> @(Model.IsPublic ? "Public" : "Restricted")</li>
                </ul>
            </div>

            @if (Model.Tags.Any())
            {
                    <div class="mb-3">
                        <h5>Tags</h5>
                        <div class="d-flex flex-wrap gap-2">
                        @foreach (var tag in Model.Tags)
                        {
                                    <span class="badge bg-secondary">@tag.Name</span>
                        }
                        </div>
                    </div>
            }
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h4>Questions</h4>
        </div>
        <div class="card-body">
            @foreach (var question in Model.Questions.OrderBy(q => q.Position))
            {
                    <div class="mb-4 p-3 border rounded">
                        <h5>@question.Title</h5>
                    @if (!string.IsNullOrEmpty(question.Description))
                    {
                                <p class="text-muted">@question.Description</p>
                    }
                        <div class="mt-2">
                        @switch (question.Type)
                        {
                            case QuestionType.SingleLineText:
                                            <input type="text" class="form-control" disabled />
                                break;
                            case QuestionType.MultiLineText:
                                            <textarea class="form-control" rows="3" disabled></textarea>
                                break;
                            case QuestionType.Integer:
                                            <input type="number" class="form-control" disabled />
                                break;
                            case QuestionType.Checkbox:
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" disabled />
                                                <label class="form-check-label">Checkbox</label>
                                            </div>
                                break;
                            case QuestionType.MultipleChoice:
                                @foreach (var option in question.Options)
                                {
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="radio" name="question_@question.Id" disabled />
                                                        <label class="form-check-label">@option.Value</label>
                                                    </div>
                                }
                                break;
                        }
                        </div>
                    </div>
            }
        </div>
    </div>

    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
        @if (User.Identity.IsAuthenticated && (Model.IsPublic || Model.AllowedUsers.Any(au => au.UserId == currentUserId)))
        {
                <button class="btn btn-primary" disabled>Fill Form (Coming Soon)</button>
        }
    </div>
</div>