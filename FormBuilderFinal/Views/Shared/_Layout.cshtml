<!DOCTYPE html>
<html lang="en" data-theme="@(Context.Items["Theme"]?.ToString() ?? "")">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FormBuilder</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">FormBuilder</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <form asp-controller="Home" asp-action="Search" method="get" class="d-flex me-3 flex-grow-1">
                        <div class="input-group">
                            <input type="text" name="query" class="form-control" placeholder="Search templates..."
                                   aria-label="Search" aria-describedby="search-button" value="@ViewBag.SearchQuery">
                            <button class="btn btn-outline-primary" type="submit" id="search-button">
                                <i class="bi bi-search"></i> Search
                            </button>
                        </div>
                    </form>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <button class="theme-toggle" id="themeToggle">
                                <i class="bi" id="themeIcon"></i>
                                <span id="themeText"></span>
                            </button>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            @if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Admin" asp-action="Index">Admin Panel</a>
                                </li>
                            }
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Template" asp-action="Index">My Forms</a>
                            </li>
                            <li class="nav-item">
                                <span class="nav-link">Hello, @User.Identity.Name!</span>
                            </li>
                            <li class="nav-item">
                                <form class="form-inline" asp-controller="Account" asp-action="Logout" method="post">
                                    <button type="submit" class="nav-link btn btn-link">Logout</button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const themeToggle = document.getElementById('themeToggle');
            const themeIcon = document.getElementById('themeIcon');
            const themeText = document.getElementById('themeText');

            const savedTheme = getCookie('theme');
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

            let currentTheme = savedTheme || (prefersDark ? 'dark' : 'light');

            applyTheme(currentTheme);

            updateButton(currentTheme);

            themeToggle.addEventListener('click', function() {
                currentTheme = currentTheme === 'light' ? 'dark' : 'light';
                applyTheme(currentTheme);
                updateButton(currentTheme);
                setCookie('theme', currentTheme, 365);
            });

            function applyTheme(theme) {
                if (theme === 'dark') {
                    document.documentElement.setAttribute('data-theme', 'dark');
                } else {
                    document.documentElement.removeAttribute('data-theme');
                }
            }

            function updateButton(theme) {
                if (theme === 'dark') {
                    themeIcon.className = 'bi bi-sun-fill';
                    themeText.textContent = 'Light Mode';
                } else {
                    themeIcon.className = 'bi bi-moon-fill';
                    themeText.textContent = 'Dark Mode';
                }
            }

            function setCookie(name, value, days) {
                const date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                const expires = "expires=" + date.toUTCString();
                document.cookie = name + "=" + value + ";" + expires + ";path=/";
            }

            function getCookie(name) {
                const nameEQ = name + "=";
                const ca = document.cookie.split(';');
                for (let i = 0; i < ca.length; i++) {
                    let c = ca[i];
                    while (c.charAt(0) === ' ') c = c.substring(1, c.length);
                    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
                }
                return null;
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>