<!DOCTYPE html>
<html lang="en" data-theme="@(Context.Items["Theme"]?.ToString() ?? "")">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FormBuilder</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">FormBuilder</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <form asp-controller="Home" asp-action="Search" method="get" class="d-flex me-3 flex-grow-1">
                        <div class="input-group">
                            <input type="text" name="query" class="form-control" placeholder="Search templates..."
                                   value="@ViewBag.SearchQuery">
                            <button class="btn btn-outline-primary" type="submit">
                                <i class="bi bi-search"></i> Search
                            </button>
                        </div>
                    </form>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <button class="theme-toggle" id="themeToggle">
                                <i class="bi" id="themeIcon"></i>
                                <span id="themeText"></span>
                            </button>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            @if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Admin" asp-action="Index">Admin Panel</a>
                                </li>
                            }
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Template" asp-action="Index">My Forms</a>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                                    @User.Identity.Name
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#helpModal">
                                            <i class="bi bi-question-circle me-2"></i>Help
                                        </a>
                                    </li>
                                </ul>
                            </li>
                            <li class="nav-item">
                                <form class="form-inline" asp-controller="Account" asp-action="Logout" method="post">
                                    <button type="submit" class="nav-link btn btn-link">Logout</button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="modal fade" id="helpModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Support Ticket</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="supportTicketForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Problem Summary</label>
                            <textarea class="form-control" id="ticketSummary" rows="3" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Priority</label>
                            <select class="form-select" id="ticketPriority" required>
                                <option value="High">High</option>
                                <option value="Average" selected>Average</option>
                                <option value="Low">Low</option>
                            </select>
                        </div>
                        <input type="hidden" id="currentPageUrl" value="@Context.Request.Path">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Submit Ticket</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1100">
        <div id="ticketToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Ticket submitted successfully! Our team will contact you soon.
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const themeToggle = document.getElementById('themeToggle');
            const themeIcon = document.getElementById('themeIcon');
            const themeText = document.getElementById('themeText');
            const savedTheme = localStorage.getItem('theme') ||
                (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');

            document.documentElement.setAttribute('data-theme', savedTheme);
            updateThemeButton(savedTheme);

            themeToggle.addEventListener('click', function () {
                const newTheme = document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
                document.documentElement.setAttribute('data-theme', newTheme);
                localStorage.setItem('theme', newTheme);
                updateThemeButton(newTheme);
            });

            function updateThemeButton(theme) {
                themeIcon.className = theme === 'dark' ? 'bi bi-sun-fill' : 'bi bi-moon-fill';
                themeText.textContent = theme === 'dark' ? 'Light Mode' : 'Dark Mode';
            }
        });

        document.getElementById('supportTicketForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status"></span> Sending...';

            try {
                const response = await fetch('/Support/CreateTicket', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        reportedBy: '@User.Identity?.Name',
                        summary: document.getElementById('ticketSummary').value,
                        priority: document.getElementById('ticketPriority').value,
                        link: window.location.href,
                        timestamp: new Date().toISOString()
                    })
                });

                const result = await response.json();
                if (!result.success) throw new Error(result.error || 'Failed to submit ticket');

                bootstrap.Modal.getInstance(document.getElementById('helpModal')).hide();

                const toast = new bootstrap.Toast(document.getElementById('ticketToast'));
                toast.show();
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to submit ticket: ' + error.message);
            } finally {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Submit Ticket';
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
